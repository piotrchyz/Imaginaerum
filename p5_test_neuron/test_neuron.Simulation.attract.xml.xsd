<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified"
    targetNamespace="p5_test_neuron" vc:minVersion="1.1" xmlns:ptn="p5_test_neuron"
    xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning">
    <xs:include schemaLocation="test_neuron.xsd"/>
    <xs:complexType name="Simulation.attract.xml">
        <xs:complexContent>
            <xs:restriction base="ptn:Simulation_body__x3A__abstract">
                <xs:sequence>
                    <xs:element maxOccurs="0" minOccurs="0"
                        ref="ptn:Simulation.attract__x3A__aggregate">
                        <xs:annotation>
                            <xs:documentation>generated in model - just for debug - passed as tunnel parameter</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element ref="ptn:Receptors"/>
                    <xs:element ref="ptn:Nodes"/>
                </xs:sequence>
            </xs:restriction>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="Simulation.attract.xml" type="ptn:Simulation.attract.xml"/>
    <xs:complexType name="Input__x3A__attract__x3A__vectors__x3A__calculate">
        <xs:sequence>
            <xs:element name="Coordinate_X__x3A__Input__X3A__attract__x3A__vector__x3A__calculate"
                maxOccurs="2"/>
            <xs:element name="Coordinate_Y__x3A__Input__X3A__attract__x3A__vector__x3A__calculate"
                maxOccurs="2"/>
            <xs:element name="Coordinate_Z__x3A__Input__X3A__attract__x3A__vector__x3A__calculate"
                maxOccurs="2"/>
        </xs:sequence>
        <xs:attribute name="Input__x3A__attract__x3A__vectors__x3A__calculate.sum"/>
        <xs:attribute
            ref="ptn:Coordinate__x3A__Input__X3A__attract__x3A__vector__x3A__calculate.ratio"/>
        <xs:anyAttribute
            namespace="http://biuro.biall-net.pl/xmlschema_procesy5/WPS_Functions/system_ui_info_speech/system_ui_info_speech.xsd"
            processContents="skip"/>
    </xs:complexType>
    <xs:complexType name="Simulation.Stress__x3A__calculate__x3A__output_node">
        <xs:complexContent>
            <xs:extension base="ptn:Node">
                <xs:attribute ref="ptn:Simulation.attract__x3A__calculate__x3A__output_node.type"
                    use="required"/>
                <xs:assert test="ptn:Capacitance = ptn:Capacitance__x3A__attract__x3A__calculate__x3A__assert/ptn:Capacitance__x3A__attract__x3A__calculate__x3A__input_node__x3A__assert/(@ptn:Capacitance__x3A__attract__x3A__give_own__x3A__ratio * text())  or not(ptn:Capacitance__x3A__attract__x3A__calculate__x3A__assert)"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="Input__x3A__attract__x3A__vectors__x3A__calculate__x3A__Stress">
        <xs:complexContent>
            <xs:extension base="ptn:Input__x3A__attract__x3A__vectors__x3A__calculate">
                <xs:anyAttribute
                    namespace="http://biuro.biall-net.pl/xmlschema_procesy5/WPS_Functions/system_ui_info_speech/system_ui_info_speech.xsd"/>
                <xs:assert
                    test="Coordinate_X__x3A__Input__X3A__attract__x3A__vector__x3A__calculate = parent::ptn:Simulation.Stress__x3A__calculate__x3A__output_node/parent::ptn:Simulation.Stress__x3A__calculate/following-sibling::ptn:Input__x3A__attract__x3A__vectors/ptn:Coordinate_X__x3A__Input__X3A__attract__x3A__vector or ancestor::ptn:Simulation.attract__x3A__aggregate"
                />
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:attribute name="Coordinate__x3A__Input__X3A__attract__x3A__vector__x3A__calculate.ratio"
        type="xs:double">
        <xs:annotation>
            <xs:documentation>do tworzenia wymnoznik nowej lokalizacji z wektora attract</xs:documentation>
        </xs:annotation>
    </xs:attribute>
    <xs:complexType name="Simulation.Stress__x3A__calculate">
        <xs:sequence>
            <xs:element minOccurs="0" ref="ptn:Simulation.Stress__x3A__calculate__x3A__output_node"/>
            <xs:element minOccurs="0"
                ref="ptn:Simulation.Stress__x3A__calculate__x3A__output_node__x3A__not_validated"/>
        </xs:sequence>
        <xs:attribute ref="ptn:debug"/>
        <xs:attribute ref="ptn:Label"/>
        <xs:attribute ref="ptn:Label__x3A__context"/>
        <xs:attribute ref="ptn:Output_Node" use="prohibited"/>
        <xs:attribute ref="ptn:Output_Node__x3A__attract" use="required"/>
        <xs:attribute ref="ptn:Simulated_potential__x3A__more_charged_node"/>
        <xs:attribute ref="ptn:Simulated_potential__x3A__diff"/>
        <xs:attribute ref="ptn:Simulated_potential__x3A__less_charged_node"/>
        <xs:attribute ref="ptn:Distance"/>
        <xs:anyAttribute
            namespace="http://biuro.biall-net.pl/xmlschema_procesy5/WPS_Functions/system_ui_info_speech/system_ui_info_speech.xsd"
            processContents="skip"/>
    </xs:complexType>
    <xs:complexType name="Simulation.Stress__x3A__calculate__x3A__aggregate"/>
    <xs:complexType name="Simulation.attract__x3A__aggregate">
        <xs:annotation>
            <xs:documentation>Analyzed to create modelk</xs:documentation>
        </xs:annotation>
        <xs:all>
            <xs:element minOccurs="0"
                name="Simulation.attract__x3A__calculate.best.unique__x3A__debug">
                <xs:complexType>
                    <xs:sequence>
                        <xs:any minOccurs="0" processContents="skip"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element maxOccurs="unbounded" minOccurs="0"
                ref="ptn:Simulation.attract__x3A__calculate"/>
            <xs:element maxOccurs="unbounded" minOccurs="0"
                ref="ptn:Simulation.Stress__x3A__calculate"/>
            <xs:element maxOccurs="unbounded" minOccurs="0"
                ref="ptn:Simulation.attract__x3A__calculate__x3A__ignored"/>
        </xs:all>
        <xs:attribute ref="ptn:debug"/>
    </xs:complexType>
    <xs:element name="Simulation.attract__x3A__aggregate"
        type="ptn:Simulation.attract__x3A__aggregate">
        <xs:unique name="eliminate_duplicate_Label__x3A__context">
            <xs:annotation>
                <xs:documentation>Eliminacja attract dla juz wykorzystanego potencjalu do innego wezla</xs:documentation>
            </xs:annotation>
            <xs:selector xpath="ptn:Simulation.attract__x3A__calculate"/>
            <xs:field xpath="@ptn:Label__x3A__context"/>
        </xs:unique>
        <xs:unique name="eliminate_duplicate_Label">
            <xs:selector xpath="ptn:Simulation.attract__x3A__calculate"/>
            <xs:field xpath="@ptn:Label"/>
        </xs:unique>
    </xs:element>
    <xs:element name="Simulation.Stress__x3A__calculate__x3A__output_node"
        type="ptn:Simulation.Stress__x3A__calculate__x3A__output_node"/>
    <xs:complexType name="Capacitance__x3A__attract__x3A__calculate__x3A__assert">
        <xs:sequence>
            <xs:element maxOccurs="unbounded"
                name="Capacitance__x3A__attract__x3A__calculate__x3A__input_node__x3A__assert"
                type="ptn:Capacitance__x3A__attract__x3A__calculate__x3A__input_node__x3A__assert"/>
        </xs:sequence>
        <xs:attribute ref="ptn:Output_Node__x3A__attract" use="required"/>
    </xs:complexType>
    <xs:complexType name="Capacitance__x3A__attract__x3A__calculate__x3A__input_node__x3A__assert">
        <xs:simpleContent>
            <xs:extension base="ptn:Capacitance">
                <xs:attribute ref="ptn:Label__x3A__context" use="required"/>
                <xs:attribute ref="ptn:Capacitance__x3A__attract__x3A__give_own__x3A__ratio"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:attribute name="Capacitance__x3A__attract__x3A__give_own__x3A__ratio"
        type="ptn:Capacitance__x3A__attract__x3A__give_own__x3A__ratio"/>
    <xs:simpleType name="Capacitance__x3A__attract__x3A__give_own__x3A__ratio">
        <xs:restriction base="xs:double">
            <xs:minExclusive value="0"/>
        </xs:restriction>
    </xs:simpleType>
</xs:schema>
