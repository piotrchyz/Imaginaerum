<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified"
    targetNamespace="p5_test_neuron" vc:minVersion="1.1" xmlns:ptn="p5_test_neuron"
    xmlns:vc="http://www.w3.org/2007/XMLSchema-versioning">
    <xs:annotation>
        <xs:documentation>Test neuron model 2019-11 a.binder</xs:documentation>
    </xs:annotation>
    <xs:include schemaLocation="test_neuron.Simulation.analys.xml.xsd">
        <xs:annotation>
            <xs:documentation>
                in Config1.xml or Simulation.model.apply.xml.0.xml
                mode {p5_test_neuron}Simulation.analys.xml
                out Simulation.analys.xml.0.xml
            </xs:documentation>
        </xs:annotation>
    </xs:include>
    <xs:include schemaLocation="test_neuron.Simulation.attract.xml.xsd">
        <xs:annotation>
            <xs:documentation>
                in Simulation.analys.xml.0.xml
                mode {p5_test_neuron}Simulation.attract.xml
                out Simulation.attract.xml.0.xml
            </xs:documentation>
        </xs:annotation>
    </xs:include>
    <xs:include schemaLocation="test_neuron.Simulation.model.xml.xsd">
        <xs:annotation>
            <xs:documentation>
                in Simulation.attract.xml.0.xml
                mode {p5_test_neuron}Simulation.model.xml
                out Simulation.model.xml.0.xml
            </xs:documentation>
        </xs:annotation>
    </xs:include>
    <xs:include schemaLocation="test_neuron.Simulation.model.stats.xml.xsd">
        <xs:annotation>
            <xs:documentation>
                in Simulation.model.xml.0.xml
                mode {p5_test_neuron}Simulation.model.stats.xml
                out Simulation.model.stats.xml.0.xml
            </xs:documentation>
        </xs:annotation>
    </xs:include>
    <xs:include schemaLocation="test_neuron.Simulation.model.validate.xml.xsd">
        <xs:annotation>
            <xs:documentation>
                in Simulation.model.stats.xml.0.xml
                mode {p5_test_neuron}Simulation.model.validate.xml
                out Simulation.model.validate.xml.0.xml
            </xs:documentation>
        </xs:annotation>
    </xs:include>
    <xs:include schemaLocation="test_neuron.Simulation.model.apply.xml.xsd">
        <xs:annotation>
            <xs:documentation>
                in Simulation.model.validate.xml.0.xml
                mode {p5_test_neuron}Simulation.model.apply.xml
                out Simulation.model.apply.xml.0.xml
            </xs:documentation>
        </xs:annotation>
    </xs:include>
    <xs:include schemaLocation="test_neuron.Simulation.analyze_simulation.xml.xsd">
        <xs:annotation>
            <xs:documentation>Analiza dla stworzneia symulacji X3d</xs:documentation>
        </xs:annotation>
    </xs:include>
    <xs:include schemaLocation="test_neuron.Simulation.ColorInterpolator__x3A__debug.xsd">
        <xs:annotation>
            <xs:documentation>Debug elements</xs:documentation>
        </xs:annotation>
    </xs:include>
    <xs:include schemaLocation="test_neuron.Simulation.generate__x3A__pattern.xsd">
        <xs:annotation>
            <xs:documentation>to generate patterns</xs:documentation>
        </xs:annotation>
    </xs:include>
    <xs:include schemaLocation="test_neuron.generated.xsd">
        <xs:annotation>
            <xs:documentation>generated prefix elements</xs:documentation>
        </xs:annotation>
    </xs:include>
    <xs:simpleType name="Capacitance">
        <xs:annotation>
            <xs:documentation>Membrane Capacitance from 0.01 to 2nF</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:decimal">
            <xs:minInclusive value="0.01"/>
            <xs:maxInclusive value="2"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="Resistance">
        <xs:annotation>
            <xs:documentation>Membrane Resistance 1...200M Ohm
</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:decimal">
            <xs:minInclusive value="1"/>
            <xs:maxInclusive value="200"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="voltage">
        <xs:annotation>
            <xs:documentation>Membrane Minimum Voltage -200 to 200mV</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:decimal">
            <xs:minInclusive value="-200"/>
            <xs:maxInclusive value="200"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="Minimum_voltage">
        <xs:restriction base="ptn:voltage"/>
    </xs:simpleType>
    <xs:simpleType name="Maximum_voltage">
        <xs:restriction base="ptn:voltage"/>
    </xs:simpleType>
    <xs:simpleType name="Potentials">
        <xs:annotation>
            <xs:documentation>Membrane Potentials -100 to 50mV</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:decimal">
            <xs:minInclusive value="-100"/>
            <xs:maxInclusive value="50"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="Simulated_potential">
        <xs:annotation>
            <xs:documentation>Current simulated potential mV. probably min -200mV max 200mV</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:decimal">
            <xs:minInclusive value="-200"/>
            <xs:maxInclusive value="200"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="Resting_potential">
        <xs:restriction base="ptn:Potentials"/>
    </xs:simpleType>
    <xs:simpleType name="Reset_potential">
        <xs:restriction base="ptn:Potentials"/>
    </xs:simpleType>
    <xs:simpleType name="Firing_threshold">
        <xs:restriction base="ptn:Potentials"/>
    </xs:simpleType>
    <xs:simpleType name="Adaptation_conductance">
        <xs:annotation>
            <xs:documentation>Adaptation Conductance of Adaptive Neuron 0.0 to 1000.0nS</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:decimal">
            <xs:minInclusive value="0.1"/>
            <xs:maxInclusive value="100"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="Adaptation_time_constant">
        <xs:annotation>
            <xs:documentation>Adaptation Time Constant of Adaptive Neuron 0.0 to 600ms</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:decimal">
            <xs:minInclusive value="0.1"/>
            <xs:maxInclusive value="600"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="Refactory_period">
        <xs:annotation>
            <xs:documentation>Synapse Refactory Period 0 to 50ms</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:decimal">
            <xs:minInclusive value="0"/>
            <xs:maxInclusive value="50"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="Maximum_current">
        <xs:annotation>
            <xs:documentation>Synapse Maximum Current 0.01 to 10.00 nA - with Time Constant - how much amperage will be unloaded</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:decimal">
            <xs:minInclusive value="0.01"/>
            <xs:maxInclusive value="10"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="Time_constant">
        <xs:annotation>
            <xs:documentation>Synapse Time Constant 0.10 to 6 ms (how long time will overload - more will more load another membrane)</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:decimal">
            <xs:minInclusive value="0.1"/>
            <xs:maxInclusive value="6"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="Delay">
        <xs:annotation>
            <xs:documentation>Synapse Delay 0 to 30ms</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:decimal">
            <xs:minInclusive value="0"/>
            <xs:maxInclusive value="30"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="Output_Node">
        <xs:annotation>
            <xs:documentation>Synapse Output Node</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:IDREF"/>
    </xs:simpleType>
    <xs:simpleType name="Simulator_tick">
        <xs:annotation>
            <xs:documentation>Simulator tick-time [ms] 0.01 ms  to 1000 ms</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:decimal">
            <xs:minInclusive value="0.01"/>
            <xs:maxInclusive value="1000"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="Simulation_ticks">
        <xs:annotation>
            <xs:documentation>How many simulation instances generate</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:int">
            <xs:minExclusive value="1"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="Label">
        <xs:annotation>
            <xs:documentation>Node Label</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:ID"/>
    </xs:simpleType>
    <xs:simpleType name="Coordinate">
        <xs:annotation>
            <xs:documentation>Coordinate of node X Y or Z or more?</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:decimal"> </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="Receptor_regex_filter">
        <xs:annotation>
            <xs:documentation>Simple filter for receptor s/A/g  - for A letter</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string"/>
    </xs:simpleType>
    <xs:simpleType name="Input_exec_time">
        <xs:annotation>
            <xs:documentation>ms - in which some input should be executed</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:decimal">
            <xs:minExclusive value="0"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="Input_exec_receptor">
        <xs:annotation>
            <xs:documentation>Which receptor should be triggered at some exec time</xs:documentation>
        </xs:annotation>
        <xs:restriction base="ptn:Output_Node"/>
    </xs:simpleType>
    <xs:simpleType name="Input_exec_Time_constant">
        <xs:annotation>
            <xs:documentation>How long input receptor will be loaded</xs:documentation>
        </xs:annotation>
        <xs:restriction base="ptn:Time_constant"/>
    </xs:simpleType>
    <xs:simpleType name="Input_exec_Maximum_current">
        <xs:annotation>
            <xs:documentation>How much current will input be loaded</xs:documentation>
        </xs:annotation>
        <xs:restriction base="ptn:Maximum_current"/>
    </xs:simpleType>
    <xs:simpleType name="Is_inhibitor">
        <xs:restriction base="xs:boolean"/>
    </xs:simpleType>
    <xs:simpleType name="Is_inhibitor_false">
        <xs:restriction base="ptn:Is_inhibitor">
            <xs:pattern value="0"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType name="Is_inhibitor_true">
        <xs:restriction base="ptn:Is_inhibitor">
            <xs:pattern value="1"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:complexType name="Node">
        <xs:sequence>
            <xs:element name="Label" type="ptn:Label"/>
            <xs:element default="0" name="Coordinate_X" type="ptn:Coordinate"/>
            <xs:element default="0" name="Coordinate_Y" type="ptn:Coordinate"/>
            <xs:element default="0" name="Coordinate_Z" type="ptn:Coordinate"/>
            <xs:element default="0.5" name="Capacitance" type="ptn:Capacitance" minOccurs="0"/>
            <xs:element default="100" name="Resistance" type="ptn:Resistance" minOccurs="0"/>
            <xs:element default="-90" name="Minimum_voltage" type="ptn:Minimum_voltage"
                minOccurs="0"/>
            <xs:element default="60" name="Maximum_voltage" type="ptn:Maximum_voltage" minOccurs="0"/>
            <xs:element default="-70" name="Resting_potential" type="ptn:Resting_potential"
                minOccurs="0"/>
            <xs:element default="-80" name="Reset_potential" type="ptn:Reset_potential"
                minOccurs="0"/>
            <xs:element default="-55" name="Firing_threshold" type="ptn:Firing_threshold"
                minOccurs="0"/>
            <xs:element default="10" minOccurs="0" name="Adaptation_conductance"
                type="ptn:Adaptation_conductance"/>
            <xs:element default="500" minOccurs="0" name="Adaptation_time_constant"
                type="ptn:Adaptation_time_constant"/>
            <xs:element default="2" name="Refactory_period" type="ptn:Refactory_period"
                minOccurs="0"/>
            <xs:element minOccurs="0" name="Is_inhibitor" type="ptn:Is_inhibitor"/>
            <xs:element ref="ptn:Outputs"/>
            <xs:element ref="ptn:Input__x3A__nodes"/>
            <xs:element minOccurs="0" ref="ptn:Input__x3A__nodes__x3A__prohibit"/>
            <xs:element default="-80" name="Simulated_potential" type="ptn:Simulated_potential_CT"/>
            <xs:element minOccurs="0" name="Attract__x3A__flag" type="ptn:Attract__x3A__flag"/>
            <xs:element maxOccurs="unbounded" minOccurs="0"
                name="Simulation.attract__x3A__calculate"
                type="ptn:Simulation.attract__x3A__calculate"/>
            <xs:element minOccurs="0" name="Output__x3A__flag" type="ptn:Output__x3A__flag"/>
            <xs:element minOccurs="0" ref="ptn:Output__x3A__flag__x3A__emmit"/>
            <xs:element minOccurs="0" name="Stress__x3A__flag" type="ptn:Stress__x3A__flag"/>
            <xs:element minOccurs="0" ref="ptn:Simulation.Stress__x3A__calculate"/>
            <xs:element minOccurs="0" name="Simulated_potential__x3A__vectors"
                type="ptn:Simulated_potential__x3A__vectors"/>
            <xs:element maxOccurs="unbounded" minOccurs="0"
                name="Simulated_potential__x3A__vectors.sum"
                type="ptn:Simulated_potential__x3A__vectors.sum"/>
        </xs:sequence>
        <xs:attribute ref="ptn:debug"/>
        <xs:attribute ref="ptn:New"/>
        <xs:attribute name="id" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="Simulated_potential_CT">
        <xs:simpleContent>
            <xs:extension base="ptn:Simulated_potential">
                <xs:attribute ref="ptn:Simulated_potential__x3A__current"/>
                <xs:attribute
                    ref="ptn:Simulation.model.apply.xml__x3A__install__x3A__Reset_potential__x3A__installed"
                />
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:attribute name="Inputs" type="xs:IDREFS"/>
    <xs:complexType name="Leaky_neuron">
        <xs:complexContent>
            <xs:restriction base="ptn:Node">
                <xs:sequence>
                    <xs:element name="Label" type="ptn:Label"/>
                    <xs:element name="Coordinate_X" type="ptn:Coordinate"/>
                    <xs:element name="Coordinate_Y" type="ptn:Coordinate"/>
                    <xs:element default="0" name="Coordinate_Z" type="ptn:Coordinate"/>
                    <xs:element default="0.5" name="Capacitance" type="ptn:Capacitance"
                        minOccurs="1"/>
                    <xs:element default="100" name="Resistance" type="ptn:Resistance" minOccurs="1"/>
                    <xs:element default="-90" name="Minimum_voltage" type="ptn:Minimum_voltage"
                        minOccurs="1"/>
                    <xs:element default="60" name="Maximum_voltage" type="ptn:Maximum_voltage"
                        minOccurs="1"/>
                    <xs:element default="-70" name="Resting_potential" type="ptn:Resting_potential"
                        minOccurs="1"/>
                    <xs:element default="-80" name="Reset_potential" type="ptn:Reset_potential"
                        minOccurs="1"/>
                    <xs:element default="-55" name="Firing_threshold" type="ptn:Firing_threshold"
                        minOccurs="1"/>
                    <xs:element default="10" maxOccurs="0" minOccurs="0"
                        name="Adaptation_conductance" type="ptn:Adaptation_conductance"/>
                    <xs:element default="500" maxOccurs="0" minOccurs="0"
                        name="Adaptation_time_constant" type="ptn:Adaptation_time_constant"/>
                    <xs:element default="2" name="Refactory_period" type="ptn:Refactory_period"
                        minOccurs="1"/>
                    <xs:element minOccurs="0" name="Is_inhibitor" type="ptn:Is_inhibitor"/>
                    <xs:element ref="ptn:Outputs"/>
                    <xs:element ref="ptn:Input__x3A__nodes"/>
                    <xs:element minOccurs="0" ref="ptn:Input__x3A__nodes__x3A__prohibit"/>
                    <xs:element default="-80" name="Simulated_potential"
                        type="ptn:Simulated_potential_CT"/>
                    <xs:element minOccurs="0" name="Attract__x3A__flag"
                        type="ptn:Attract__x3A__flag"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0"
                        name="Simulation.attract__x3A__calculate"
                        type="ptn:Simulation.attract__x3A__calculate"/>
                    <xs:element minOccurs="0" name="Output__x3A__flag" type="ptn:Output__x3A__flag"/>
                    <xs:element minOccurs="0" ref="ptn:Output__x3A__flag__x3A__emmit"/>
                    <xs:element minOccurs="0" name="Stress__x3A__flag" type="ptn:Stress__x3A__flag"/>
                    <xs:element minOccurs="0" ref="ptn:Simulation.Stress__x3A__calculate"/>
                    <xs:element minOccurs="0" name="Simulated_potential__x3A__vectors"
                        type="ptn:Simulated_potential__x3A__vectors"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0"
                        name="Simulated_potential__x3A__vectors.sum"
                        type="ptn:Simulated_potential__x3A__vectors.sum"/>
                </xs:sequence>
            </xs:restriction>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="Leaky_neuron_standard">
        <xs:complexContent>
            <xs:restriction base="ptn:Leaky_neuron">
                <xs:sequence>
                    <xs:element name="Label" type="ptn:Label"/>
                    <xs:element name="Coordinate_X" type="ptn:Coordinate"/>
                    <xs:element name="Coordinate_Y" type="ptn:Coordinate"/>
                    <xs:element default="0" name="Coordinate_Z" type="ptn:Coordinate"/>
                    <xs:element default="0.5" name="Capacitance" type="ptn:Capacitance"
                        minOccurs="1"/>
                    <xs:element default="100" name="Resistance" type="ptn:Resistance" minOccurs="1"/>
                    <xs:element default="-90" name="Minimum_voltage" type="ptn:Minimum_voltage"
                        minOccurs="1"/>
                    <xs:element default="60" name="Maximum_voltage" type="ptn:Maximum_voltage"
                        minOccurs="1"/>
                    <xs:element default="-70" name="Resting_potential" type="ptn:Resting_potential"
                        minOccurs="1"/>
                    <xs:element default="-80" name="Reset_potential" type="ptn:Reset_potential"
                        minOccurs="1"/>
                    <xs:element default="-55" name="Firing_threshold" type="ptn:Firing_threshold"
                        minOccurs="1"/>
                    <xs:element default="10" maxOccurs="0" minOccurs="0"
                        name="Adaptation_conductance" type="ptn:Adaptation_conductance"/>
                    <xs:element default="500" maxOccurs="0" minOccurs="0"
                        name="Adaptation_time_constant" type="ptn:Adaptation_time_constant"/>
                    <xs:element default="2" name="Refactory_period" type="ptn:Refactory_period"
                        minOccurs="1"/>
                    <xs:element minOccurs="1" name="Is_inhibitor" type="ptn:Is_inhibitor_false"/>
                    <xs:element ref="ptn:Outputs"/>
                    <xs:element ref="ptn:Input__x3A__nodes"/>
                    <xs:element minOccurs="0" ref="ptn:Input__x3A__nodes__x3A__prohibit"/>
                    <xs:element default="-80" name="Simulated_potential"
                        type="ptn:Simulated_potential_CT"/>
                    <xs:element minOccurs="0" name="Attract__x3A__flag"
                        type="ptn:Attract__x3A__flag"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0"
                        name="Simulation.attract__x3A__calculate"
                        type="ptn:Simulation.attract__x3A__calculate"/>
                    <xs:element minOccurs="0" name="Output__x3A__flag" type="ptn:Output__x3A__flag"/>
                    <xs:element minOccurs="0" ref="ptn:Output__x3A__flag__x3A__emmit"/>
                    <xs:element minOccurs="0" name="Stress__x3A__flag" type="ptn:Stress__x3A__flag"/>
                    <xs:element minOccurs="0" ref="ptn:Simulation.Stress__x3A__calculate"/>
                    <xs:element minOccurs="0" name="Simulated_potential__x3A__vectors"
                        type="ptn:Simulated_potential__x3A__vectors"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0"
                        name="Simulated_potential__x3A__vectors.sum"
                        type="ptn:Simulated_potential__x3A__vectors.sum"/>
                </xs:sequence>
            </xs:restriction>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="Leaky_neuron_inhibitor">
        <xs:complexContent>
            <xs:restriction base="ptn:Leaky_neuron">
                <xs:sequence>
                    <xs:element name="Label" type="ptn:Label"/>
                    <xs:element name="Coordinate_X" type="ptn:Coordinate"/>
                    <xs:element name="Coordinate_Y" type="ptn:Coordinate"/>
                    <xs:element default="0" name="Coordinate_Z" type="ptn:Coordinate"/>
                    <xs:element default="0.5" name="Capacitance" type="ptn:Capacitance"
                        minOccurs="1"/>
                    <xs:element default="100" name="Resistance" type="ptn:Resistance" minOccurs="1"/>
                    <xs:element default="-90" name="Minimum_voltage" type="ptn:Minimum_voltage"
                        minOccurs="1"/>
                    <xs:element default="60" name="Maximum_voltage" type="ptn:Maximum_voltage"
                        minOccurs="1"/>
                    <xs:element default="-70" name="Resting_potential" type="ptn:Resting_potential"
                        minOccurs="1"/>
                    <xs:element default="-80" name="Reset_potential" type="ptn:Reset_potential"
                        minOccurs="1"/>
                    <xs:element default="-55" name="Firing_threshold" type="ptn:Firing_threshold"
                        minOccurs="1"/>
                    <xs:element default="10" maxOccurs="0" minOccurs="0"
                        name="Adaptation_conductance" type="ptn:Adaptation_conductance"/>
                    <xs:element default="500" maxOccurs="0" minOccurs="0"
                        name="Adaptation_time_constant" type="ptn:Adaptation_time_constant"/>
                    <xs:element default="2" name="Refactory_period" type="ptn:Refactory_period"
                        minOccurs="1"/>
                    <xs:element minOccurs="1" name="Is_inhibitor" type="ptn:Is_inhibitor_true"/>
                    <xs:element ref="ptn:Outputs"/>
                    <xs:element ref="ptn:Input__x3A__nodes"/>
                    <xs:element minOccurs="0" ref="ptn:Input__x3A__nodes__x3A__prohibit"/>
                    <xs:element default="-80" name="Simulated_potential"
                        type="ptn:Simulated_potential_CT"/>
                    <xs:element minOccurs="0" name="Output__x3A__flag" type="ptn:Output__x3A__flag"/>
                    <xs:element minOccurs="0" ref="ptn:Output__x3A__flag__x3A__emmit"/>
                    <xs:element minOccurs="0" ref="ptn:Simulation.Stress__x3A__calculate"/>
                    <xs:element minOccurs="0" name="Simulated_potential__x3A__vectors"
                        type="ptn:Simulated_potential__x3A__vectors"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0"
                        name="Simulated_potential__x3A__vectors.sum"
                        type="ptn:Simulated_potential__x3A__vectors.sum"/>
                </xs:sequence>
            </xs:restriction>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="Adaptive_neuron">
        <xs:complexContent>
            <xs:restriction base="ptn:Node">
                <xs:sequence>
                    <xs:element name="Label" type="ptn:Label"/>
                    <xs:element name="Coordinate_X" type="ptn:Coordinate"/>
                    <xs:element name="Coordinate_Y" type="ptn:Coordinate"/>
                    <xs:element default="0" name="Coordinate_Z" type="ptn:Coordinate"/>
                    <xs:element default="0.5" name="Capacitance" type="ptn:Capacitance"
                        maxOccurs="0" minOccurs="0"/>
                    <xs:element default="100" name="Resistance" type="ptn:Resistance" maxOccurs="0"
                        minOccurs="0"/>
                    <xs:element default="-90" name="Minimum_voltage" type="ptn:Minimum_voltage"
                        maxOccurs="0" minOccurs="0"/>
                    <xs:element default="60" name="Maximum_voltage" type="ptn:Maximum_voltage"
                        maxOccurs="0" minOccurs="0"/>
                    <xs:element default="-70" name="Resting_potential" type="ptn:Resting_potential"
                        maxOccurs="0" minOccurs="0"/>
                    <xs:element default="-70" name="Resting_potential" type="ptn:Resting_potential"
                        maxOccurs="0" minOccurs="0"/>
                    <xs:element default="-80" name="Reset_potential" type="ptn:Reset_potential"
                        maxOccurs="0" minOccurs="0"/>
                    <xs:element default="-55" name="Firing_threshold" type="ptn:Firing_threshold"
                        maxOccurs="0" minOccurs="0"/>
                    <xs:element default="10" minOccurs="1" name="Adaptation_conductance"
                        type="ptn:Adaptation_conductance"/>
                    <xs:element default="500" minOccurs="1" name="Adaptation_time_constant"
                        type="ptn:Adaptation_time_constant"/>
                    <xs:element default="2" name="Refactory_period" type="ptn:Refactory_period"
                        maxOccurs="0" minOccurs="0"/>
                    <xs:element minOccurs="0" name="Is_inhibitor" type="ptn:Is_inhibitor"/>
                    <xs:element ref="ptn:Outputs"/>
                    <xs:element ref="ptn:Input__x3A__nodes"/>
                    <xs:element minOccurs="0" ref="ptn:Input__x3A__nodes__x3A__prohibit"/>
                    <xs:element default="-80" name="Simulated_potential"
                        type="ptn:Simulated_potential_CT"/>
                    <xs:element minOccurs="0" name="Output__x3A__flag" type="ptn:Output__x3A__flag"/>
                    <xs:element minOccurs="0" ref="ptn:Output__x3A__flag__x3A__emmit"/>
                    <xs:element minOccurs="0" name="Stress__x3A__flag" type="ptn:Stress__x3A__flag"/>
                    <xs:element minOccurs="0" ref="ptn:Simulation.Stress__x3A__calculate"/>
                    <xs:element minOccurs="0" name="Simulated_potential__x3A__vectors"
                        type="ptn:Simulated_potential__x3A__vectors"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0"
                        name="Simulated_potential__x3A__vectors.sum"
                        type="ptn:Simulated_potential__x3A__vectors.sum"/>
                </xs:sequence>
            </xs:restriction>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="Adaptive_neuron_standard">
        <xs:complexContent>
            <xs:restriction base="ptn:Adaptive_neuron">
                <xs:sequence>
                    <xs:element name="Label" type="ptn:Label"/>
                    <xs:element name="Coordinate_X" type="ptn:Coordinate"/>
                    <xs:element name="Coordinate_Y" type="ptn:Coordinate"/>
                    <xs:element default="0" name="Coordinate_Z" type="ptn:Coordinate"/>
                    <xs:element default="0.5" name="Capacitance" type="ptn:Capacitance"
                        maxOccurs="0" minOccurs="0"/>
                    <xs:element default="100" name="Resistance" type="ptn:Resistance" maxOccurs="0"
                        minOccurs="0"/>
                    <xs:element default="-90" name="Minimum_voltage" type="ptn:Minimum_voltage"
                        maxOccurs="0" minOccurs="0"/>
                    <xs:element default="60" name="Maximum_voltage" type="ptn:Maximum_voltage"
                        maxOccurs="0" minOccurs="0"/>
                    <xs:element default="-70" name="Resting_potential" type="ptn:Resting_potential"
                        maxOccurs="0" minOccurs="0"/>
                    <xs:element default="-70" name="Resting_potential" type="ptn:Resting_potential"
                        maxOccurs="0" minOccurs="0"/>
                    <xs:element default="-80" name="Reset_potential" type="ptn:Reset_potential"
                        maxOccurs="0" minOccurs="0"/>
                    <xs:element default="-55" name="Firing_threshold" type="ptn:Firing_threshold"
                        maxOccurs="0" minOccurs="0"/>
                    <xs:element default="10" minOccurs="1" name="Adaptation_conductance"
                        type="ptn:Adaptation_conductance"/>
                    <xs:element default="500" minOccurs="1" name="Adaptation_time_constant"
                        type="ptn:Adaptation_time_constant"/>
                    <xs:element default="2" name="Refactory_period" type="ptn:Refactory_period"
                        maxOccurs="0" minOccurs="0"/>
                    <xs:element minOccurs="1" name="Is_inhibitor" type="ptn:Is_inhibitor_false"/>
                    <xs:element ref="ptn:Outputs"/>
                    <xs:element ref="ptn:Input__x3A__nodes"/>
                    <xs:element minOccurs="0" ref="ptn:Input__x3A__nodes__x3A__prohibit"/>
                    <xs:element default="-80" name="Simulated_potential"
                        type="ptn:Simulated_potential_CT"/>
                    <xs:element minOccurs="0" name="Output__x3A__flag" type="ptn:Output__x3A__flag"/>
                    <xs:element minOccurs="0" ref="ptn:Output__x3A__flag__x3A__emmit"/>
                    <xs:element minOccurs="0" name="Stress__x3A__flag" type="ptn:Stress__x3A__flag"/>
                    <xs:element minOccurs="0" ref="ptn:Simulation.Stress__x3A__calculate"/>
                    <xs:element minOccurs="0" name="Simulated_potential__x3A__vectors"
                        type="ptn:Simulated_potential__x3A__vectors"/>
                </xs:sequence>
            </xs:restriction>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="Adaptive_neuron_inhibitor">
        <xs:complexContent>
            <xs:restriction base="ptn:Adaptive_neuron">
                <xs:sequence>
                    <xs:element name="Label" type="ptn:Label"/>
                    <xs:element name="Coordinate_X" type="ptn:Coordinate"/>
                    <xs:element name="Coordinate_Y" type="ptn:Coordinate"/>
                    <xs:element default="0" name="Coordinate_Z" type="ptn:Coordinate"/>
                    <xs:element default="0.5" name="Capacitance" type="ptn:Capacitance"
                        maxOccurs="0" minOccurs="0"/>
                    <xs:element default="100" name="Resistance" type="ptn:Resistance" maxOccurs="0"
                        minOccurs="0"/>
                    <xs:element default="-90" name="Minimum_voltage" type="ptn:Minimum_voltage"
                        maxOccurs="0" minOccurs="0"/>
                    <xs:element default="60" name="Maximum_voltage" type="ptn:Maximum_voltage"
                        maxOccurs="0" minOccurs="0"/>
                    <xs:element default="-70" name="Resting_potential" type="ptn:Resting_potential"
                        maxOccurs="0" minOccurs="0"/>
                    <xs:element default="-70" name="Resting_potential" type="ptn:Resting_potential"
                        maxOccurs="0" minOccurs="0"/>
                    <xs:element default="-80" name="Reset_potential" type="ptn:Reset_potential"
                        maxOccurs="0" minOccurs="0"/>
                    <xs:element default="-55" name="Firing_threshold" type="ptn:Firing_threshold"
                        maxOccurs="0" minOccurs="0"/>
                    <xs:element default="10" minOccurs="1" name="Adaptation_conductance"
                        type="ptn:Adaptation_conductance"/>
                    <xs:element default="500" minOccurs="1" name="Adaptation_time_constant"
                        type="ptn:Adaptation_time_constant"/>
                    <xs:element default="2" name="Refactory_period" type="ptn:Refactory_period"
                        maxOccurs="0" minOccurs="0"/>
                    <xs:element minOccurs="1" name="Is_inhibitor" type="ptn:Is_inhibitor_true"/>
                    <xs:element ref="ptn:Outputs"/>
                    <xs:element ref="ptn:Input__x3A__nodes"/>
                    <xs:element minOccurs="0" ref="ptn:Input__x3A__nodes__x3A__prohibit"/>
                    <xs:element default="-80" name="Simulated_potential"
                        type="ptn:Simulated_potential_CT"/>
                    <xs:element minOccurs="0" name="Output__x3A__flag" type="ptn:Output__x3A__flag"/>
                    <xs:element minOccurs="0" ref="ptn:Output__x3A__flag__x3A__emmit"/>
                    <xs:element minOccurs="0" name="Stress__x3A__flag" type="ptn:Stress__x3A__flag"/>
                    <xs:element minOccurs="0" ref="ptn:Simulation.Stress__x3A__calculate"/>
                    <xs:element minOccurs="0" name="Simulated_potential__x3A__vectors"
                        type="ptn:Simulated_potential__x3A__vectors"/>
                    <xs:element maxOccurs="unbounded" minOccurs="0"
                        name="Simulated_potential__x3A__vectors.sum"
                        type="ptn:Simulated_potential__x3A__vectors.sum"/>
                </xs:sequence>
            </xs:restriction>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="Receptor">
        <xs:annotation>
            <xs:documentation>First neuron for input</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="ptn:Leaky_neuron">
                <xs:sequence>
                    <xs:element name="Receptor_regex_filter" type="ptn:Receptor_regex_filter"/>
                </xs:sequence>
                <xs:attribute ref="ptn:Receptor__x3A__generate__fieldOfView__x3A__ratio"/>
                <xs:attribute ref="ptn:Coordinate_X__x3A__generated"/>
                <xs:attribute ref="ptn:Coordinate_Y__x3A__generated"/>
                <xs:attribute ref="ptn:Coordinate_X__x3A__min"/>
                <xs:attribute ref="ptn:Coordinate_X__x3A__max"/>
                <xs:attribute ref="ptn:Coordinate_Y__x3A__min"/>
                <xs:attribute ref="ptn:Coordinate_Y__x3A__max"/>
                <xs:attribute ref="ptn:Coordinate_X__x3A__fieldOfView__x3A__ray"/>
                <xs:attribute ref="ptn:Coordinate_Y__x3A__fieldOfView__x3A__ray"/>
                <xs:attribute ref="ptn:Coordinate_Z__x3A__fieldOfView__x3A__ray"/>
                <xs:attribute ref="ptn:Coordinate_X__x3A__generated__separator"/>
                <xs:attribute ref="ptn:Coordinate_Y__x3A__generated__separator"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="Simulated_potential.emmit.vector">
        <xs:simpleContent>
            <xs:extension base="ptn:Simulated_potential">
                <xs:attribute ref="ptn:debug"/>
                <xs:attribute ref="ptn:Label__x3A__context" use="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:complexType name="Current_synapse">
        <xs:annotation>
            <xs:documentation>Synapsa od do</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element default="3" name="Maximum_current" type="ptn:Maximum_current"/>
            <xs:element default="2" name="Time_constant" type="ptn:Time_constant"/>
            <xs:element default="5" name="Delay" type="ptn:Delay"/>
            <xs:element name="Output_Node" type="ptn:Output_Node"/>
        </xs:sequence>
        <xs:attribute inheritable="false" ref="ptn:debug"/>
    </xs:complexType>
    <xs:complexType name="Input">
        <xs:sequence>
            <xs:element name="Input_exec_time" type="ptn:Input_exec_time"/>
            <xs:element minOccurs="0" name="Input_exec_time__x3A__initial"
                type="ptn:Input_exec_time"/>
            <xs:element name="Input_exec_receptor" type="ptn:Input_exec_receptor"/>
            <xs:element name="Input_exec_Time_constant" type="ptn:Input_exec_Time_constant"/>
            <xs:element name="Input_exec_Maximum_current" type="ptn:Input_exec_Maximum_current"/>
            <xs:element minOccurs="0" name="Input__x3A__Is_inhibitor" type="ptn:Is_inhibitor"/>
        </xs:sequence>
        <xs:attribute ref="ptn:debug"/>
    </xs:complexType>
    <xs:complexType name="Outputs">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" minOccurs="0" name="Current_synapse"
                type="ptn:Current_synapse"/>
        </xs:sequence>
        <xs:attribute ref="ptn:debug"/>
    </xs:complexType>
    <xs:element name="Outputs" type="ptn:Outputs"> </xs:element>
    <xs:element name="Input__x3A__nodes">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0" name="Input__x3A__node"
                    type="ptn:Output_Node"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="Config">
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="ptn:Defaults"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="ptn:Receptor__x3A__generate"/>
                <xs:element ref="ptn:Receptors"/>
                <xs:element ref="ptn:Inputs"/>
                <xs:element ref="ptn:Simulation"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="Defaults">
        <xs:complexType>
            <xs:sequence>
                <xs:element default="0.5" name="Capacitance" type="ptn:Capacitance"/>
                <xs:element default="100" name="Resistance" type="ptn:Resistance"/>
                <xs:element default="-90" name="Minimum_voltage" type="ptn:Minimum_voltage"/>
                <xs:element default="60" name="Maximum_voltage" type="ptn:Maximum_voltage"/>
                <xs:element default="-70" name="Resting_potential" type="ptn:Resting_potential"/>
                <xs:element default="-80" name="Reset_potential" type="ptn:Reset_potential"/>
                <xs:element default="-55" name="Firing_threshold" type="ptn:Firing_threshold"/>
                <xs:element default="10" name="Adaptation_conductance"
                    type="ptn:Adaptation_conductance"/>
                <xs:element default="500" name="Adaptation_time_constant"
                    type="ptn:Adaptation_time_constant"/>
                <xs:element default="2" name="Refactory_period" type="ptn:Refactory_period"/>
                <xs:element default="3" name="Maximum_current" type="ptn:Maximum_current"/>
                <xs:element default="2" name="Time_constant" type="ptn:Delay"/>
                <xs:element default="5" name="Delay" type="ptn:Delay"/>
                <xs:element default="-60" name="Attract_min" type="ptn:Attract_min"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="Receptors">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" ref="ptn:Receptor"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:attribute name="Receptor__x3A__generate__fieldOfView__x3A__ratio"
        type="ptn:fieldOfView__x3A__ratio"/>
    <xs:simpleType name="fieldOfView__x3A__ratio">
        <xs:restriction base="xs:double">
            <xs:minExclusive value="0"/>
            <xs:maxExclusive value="1"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:element name="Receptor">
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="ptn:Receptor">
                    <xs:assert
                        test="ptn:Attract__x3A__flag and not(ptn:Outputs/ptn:Current_synapse) or not(ptn:Attract__x3A__flag)">
                        <xs:annotation>
                            <xs:documentation>No attract when outputs avialable</xs:documentation>
                        </xs:annotation>
                    </xs:assert>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>
    <xs:element name="Nodes">
        <xs:complexType>
            <xs:sequence maxOccurs="unbounded">
                <xs:element ref="ptn:Leaky_neuron_standard" minOccurs="0"/>
                <xs:element form="qualified" minOccurs="0" name="Leaky_neuron_inhibitor"
                    type="ptn:Leaky_neuron_inhibitor"/>
                <xs:element name="Leaky_neuron_inhibitor__x3A__AB" type="ptn:Leaky_neuron_inhibitor"
                    minOccurs="0"/>
                <xs:element name="Leaky_neuron_inhibitor__X3A__AA" type="ptn:Leaky_neuron_inhibitor"
                    minOccurs="0"/>
                <xs:element minOccurs="0" name="Adaptive_neuron_standard"
                    type="ptn:Adaptive_neuron_standard"/>
                <xs:element minOccurs="0" name="Adaptive_neuron_inhibitor"
                    type="ptn:Adaptive_neuron_inhibitor"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="Leaky_neuron_standard" type="ptn:Leaky_neuron_standard"/>
    <xs:element name="Inputs">
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" ref="ptn:Input" minOccurs="0"/>
                <xs:element maxOccurs="unbounded" minOccurs="0" ref="ptn:Input__x3A__generate"/>
                <xs:element maxOccurs="unbounded" minOccurs="0"
                    ref="ptn:Input__x3A__generate__x3A__pattern"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:element name="Input" type="ptn:Input"/>
    <xs:element name="Simulation">
        <xs:complexType>
            <xs:sequence>
                <xs:element default="1" name="Simulator_tick" type="ptn:Simulator_tick"/>
                <xs:element default="10" name="Simulation_ticks" type="ptn:Simulation_ticks"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:simpleType name="Simulation_body_tick">
        <xs:annotation>
            <xs:documentation>Which simulation instance number it is</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:decimal"/>
    </xs:simpleType>
    <xs:simpleType name="Simulation_body_time">
        <xs:annotation>
            <xs:documentation>Current body time simulated (Simulator_tick * Simulation_body_tick)</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:decimal"/>
    </xs:simpleType>
    <xs:attribute default="1" name="Simulation_body_tick" type="ptn:Simulation_body_tick"/>
    <xs:attribute name="Simulation_body_time" type="ptn:Simulation_body_time"/>
    <xs:attribute name="Simulation_body_time__x3A__last" type="ptn:Simulation_body_time"/>
    <xs:attribute name="Simulator_tick" type="ptn:Simulator_tick"/>
    <xs:complexType name="Simulation_body__x3A__abstract">
        <xs:sequence>
            <xs:element minOccurs="0" ref="ptn:Simulation.model.validate.xml__x3A__stats"/>
            <xs:element minOccurs="0" ref="ptn:Simulation.attract__x3A__aggregate">
                <xs:annotation>
                    <xs:documentation>generated in model - just for debug - passed as tunnel parameter</xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element minOccurs="0" ref="ptn:Simulation.attract__x3A__aggregate__x3A__validated"/>
            <xs:element ref="ptn:Receptors"/>
            <xs:element ref="ptn:Nodes"/>
        </xs:sequence>
        <xs:attribute ref="ptn:Simulation_body_tick" use="required"/>
        <xs:attribute ref="ptn:Simulation_body_time" use="required"/>
        <xs:attribute ref="ptn:Simulation_body_time__x3A__last" use="required"/>
        <xs:attribute ref="ptn:Simulator_tick" use="required">
            <xs:annotation>
                <xs:documentation>Todo ? optimize in config</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="Simulation_body">
        <xs:complexContent>
            <xs:restriction base="ptn:Simulation_body__x3A__abstract">
                <xs:sequence>
                    <xs:element minOccurs="0" ref="ptn:Simulation.attract__x3A__aggregate"
                        maxOccurs="0">
                        <xs:annotation>
                            <xs:documentation>generated in model - just for debug - passed as tunnel parameter</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element ref="ptn:Receptors"/>
                    <xs:element ref="ptn:Nodes"/>
                </xs:sequence>
            </xs:restriction>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="Simulation_body" type="ptn:Simulation_body">
        <xs:annotation>
            <xs:documentation>Current simulation body</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:simpleType name="Simulated_potential.resting.vector">
        <xs:annotation>
            <xs:documentation>Based on resting potential vector</xs:documentation>
        </xs:annotation>
        <xs:restriction base="ptn:Simulated_potential"/>
    </xs:simpleType>
    <xs:simpleType name="Simulated_potential__x3A__previous">
        <xs:annotation>
            <xs:documentation>TODO previous Simulated_potential - to compare/analysis/validate</xs:documentation>
        </xs:annotation>
        <xs:restriction base="ptn:Simulated_potential"/>
    </xs:simpleType>
    <xs:simpleType name="Simulated_potential.input.vector">
        <xs:annotation>
            <xs:documentation>To calculate based on input vector - todo analys time_constant and symulation ticks to make input during several steps - 
 or divide on start based on ticks
 or use smart during analys based on ticks</xs:documentation>
        </xs:annotation>
        <xs:restriction base="ptn:Simulated_potential"/>
    </xs:simpleType>
    <xs:attribute name="Simulated_potential__x3A__previous"
        type="ptn:Simulated_potential__x3A__previous"/>
    <xs:complexType name="Simulated_potential__x3A__vectors">
        <xs:sequence maxOccurs="unbounded" minOccurs="0">
            <xs:element name="Simulated_potential.resting.vector"
                type="ptn:Simulated_potential.resting.vector" maxOccurs="unbounded" minOccurs="0"/>
            <xs:element minOccurs="0" name="Simulated_potential.input.vector"
                type="ptn:Simulated_potential.input.vector" maxOccurs="unbounded"/>
            <xs:element name="Simulated_potential.emmit.vector"
                type="ptn:Simulated_potential.emmit.vector" maxOccurs="unbounded" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute ref="ptn:Simulated_potential__x3A__previous" use="required"/>
    </xs:complexType>
    <xs:simpleType name="Output__x3A__flag">
        <xs:annotation>
            <xs:documentation>When caused node to fire - than this flag... to be transformed to Output synapses</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:boolean"/>
    </xs:simpleType>
    <xs:simpleType name="Stress__x3A__flag">
        <xs:annotation>
            <xs:documentation>TODO no variant - fire everywhere</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:boolean"/>
    </xs:simpleType>
    <xs:simpleType name="Attract__x3A__flag">
        <xs:annotation>
            <xs:documentation>When lower than fire and higher than Min Attract param - should create variant</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:boolean"/>
    </xs:simpleType>
    <xs:simpleType name="Simulated_potential__x3A__vectors.sum">
        <xs:annotation>
            <xs:documentation>Calculated values in sequence - which were serialized to potential 
debug most feature</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string"/>
    </xs:simpleType>
    <xs:simpleType name="Attract_min">
        <xs:annotation>
            <xs:documentation>Which min value potential affect to create new variant</xs:documentation>
        </xs:annotation>
        <xs:restriction base="ptn:voltage"/>
    </xs:simpleType>
    <xs:attributeGroup name="Simulation.attract__x3A__calculate">
        <xs:annotation>
            <xs:documentation>Propably should be more nodes mechanizms</xs:documentation>
        </xs:annotation>
        <xs:attribute ref="ptn:Label__x3A__context"/>
        <xs:attribute ref="ptn:Simulated_potential__x3A__diff"/>
        <xs:attribute ref="ptn:Distance"/>
        <xs:attribute ref="ptn:Label"/>
        <xs:attribute ref="ptn:Simulation.attract__x3A__calculate.best.unique.position"/>
        <xs:attribute ref="ptn:Simulated_potential__x3A__more_charged_node" use="required"/>
        <xs:attribute ref="ptn:Simulated_potential__x3A__less_charged_node" use="required"/>
        <xs:attribute ref="ptn:Output_Node" use="prohibited"/>
        <xs:attribute ref="ptn:Output_Node__x3A__attract" use="required"/>
    </xs:attributeGroup>
    <xs:complexType name="Simulation.attract__x3A__calculate">
        <xs:annotation>
            <xs:documentation>Transformed from ptn:Attract__x3A__flag - to analyze generate new structure variant</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element maxOccurs="3" ref="ptn:Simulation.attract__x3A__calculate__x3A__output_node"
                minOccurs="0"/>
            <xs:element maxOccurs="3" minOccurs="0"
                ref="ptn:Simulation.attract__x3A__calculate__x3A__output_node__x3A__validated"/>
        </xs:sequence>
        <xs:attributeGroup ref="ptn:Simulation.attract__x3A__calculate"/>
        <xs:attribute ref="ptn:debug"/>
    </xs:complexType>
    <xs:element name="Simulation.attract__x3A__calculate"
        type="ptn:Simulation.attract__x3A__calculate"/>
    <xs:element name="Simulation.attract__x3A__calculate__x3A__ignored"
        type="ptn:Simulation.attract__x3A__calculate"/>
    <xs:attribute name="Label" type="ptn:Output_Node"/>
    <xs:attribute name="Label__x3A__context" type="ptn:Output_Node">
        <xs:annotation>
            <xs:documentation>Used in attract to provide linking for model</xs:documentation>
        </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Simulated_potential__x3A__diff" type="ptn:Simulated_potential"/>
    <xs:attribute name="Simulated_potential__x3A__more_charged_node" type="ptn:Output_Node">
        <xs:annotation>
            <xs:documentation>To decide further strategy of new model</xs:documentation>
        </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Simulated_potential__x3A__less_charged_node" type="ptn:Output_Node">
        <xs:annotation>
            <xs:documentation>To decide further strategy of new model</xs:documentation>
        </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Output_Node" type="ptn:Output_Node">
        <xs:annotation>
            <xs:documentation>In Simulated potential, propose new node name</xs:documentation>
        </xs:annotation>
    </xs:attribute>
    <xs:simpleType name="Distance">
        <xs:restriction base="xs:decimal"/>
    </xs:simpleType>
    <xs:attribute name="Distance" type="ptn:Distance"/>
    <xs:attribute name="Simulation.attract__x3A__calculate.best.unique.position" type="xs:int">
        <xs:annotation>
            <xs:documentation>Just for select in for-each row number order best</xs:documentation>
        </xs:annotation>
    </xs:attribute>
    <xs:attribute inheritable="false" name="debug" type="xs:string"/>
    <xs:complexType name="Simulation.attract__x3A__aggregate">
        <xs:annotation>
            <xs:documentation>Analyzed to create modelk</xs:documentation>
        </xs:annotation>
        <xs:all>
            <xs:element minOccurs="0"
                name="Simulation.attract__x3A__calculate.best.unique__x3A__debug">
                <xs:complexType>
                    <xs:sequence>
                        <xs:any processContents="skip" minOccurs="0"/>
                    </xs:sequence>
                </xs:complexType>
            </xs:element>
            <xs:element maxOccurs="unbounded" minOccurs="0"
                ref="ptn:Simulation.attract__x3A__calculate"/>
            <xs:element maxOccurs="unbounded" minOccurs="0"
                ref="ptn:Simulation.Stress__x3A__calculate"/>
            <xs:element maxOccurs="unbounded" minOccurs="0"
                ref="ptn:Simulation.attract__x3A__calculate__x3A__ignored"/>
        </xs:all>
    </xs:complexType>
    <xs:element name="Simulation.attract__x3A__aggregate"
        type="ptn:Simulation.attract__x3A__aggregate">
        <xs:unique name="eliminate_duplicate_Label__x3A__context">
            <xs:annotation>
                <xs:documentation>Eliminacja attract dla juz wykorzystanego potencjalu do innego wezla</xs:documentation>
            </xs:annotation>
            <xs:selector xpath="ptn:Simulation.attract__x3A__calculate"/>
            <xs:field xpath="@ptn:Label__x3A__context"/>
        </xs:unique>
        <xs:unique name="eliminate_duplicate_Label">
            <xs:selector xpath="ptn:Simulation.attract__x3A__calculate"/>
            <xs:field xpath="@ptn:Label"/>
        </xs:unique>
    </xs:element>
    <xs:complexType name="Simulation.attract__x3A__calculate__x3A__output_node">
        <xs:complexContent>
            <xs:extension base="ptn:Node">
                <xs:attribute ref="ptn:Simulation.attract__x3A__calculate__x3A__output_node.type"
                    use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:simpleType name="Simulation.attract__x3A__calculate__x3A__output_node.type">
        <xs:restriction base="xs:string">
            <xs:enumeration value="ptn:Leaky_neuron_standard"/>
            <xs:enumeration value="ptn:Leaky_neuron_inhibitor"/>
            <xs:enumeration value="ptn:Leaky_neuron_inhibitor__X3A__AA"/>
            <xs:enumeration value="ptn:Leaky_neuron_inhibitor__x3A__AB"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:attribute name="Simulation.attract__x3A__calculate__x3A__output_node.type"
        type="ptn:Simulation.attract__x3A__calculate__x3A__output_node.type"/>
    <xs:element name="Simulation.attract__x3A__calculate__x3A__output_node"
        type="ptn:Simulation.attract__x3A__calculate__x3A__output_node">
        <xs:annotation>
            <xs:documentation>Calculations are optimal in attract mode, to just remodel in model scenario</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:attribute name="New" type="xs:boolean">
        <xs:annotation>
            <xs:documentation>When new created - to optimize 3d</xs:documentation>
        </xs:annotation>
    </xs:attribute>
    <xs:element name="Output__x3A__flag__x3A__emmit">
        <xs:annotation>
            <xs:documentation>w analyz reagukje na flag, do zabrania w attract</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element maxOccurs="unbounded" minOccurs="0"
                    ref="ptn:Current_synapse__x3A__emmit"/>
            </xs:sequence>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="Current_synapse__x3A__emmit">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" ref="ptn:Input"/>
        </xs:sequence>
        <xs:attribute ref="ptn:debug"/>
        <xs:attribute ref="ptn:Output_Node">
            <xs:annotation>
                <xs:documentation>Debugowo - do usuniecia raczej</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>
    <xs:element name="Current_synapse__x3A__emmit" type="ptn:Current_synapse__x3A__emmit"/>
    <xs:complexType name="Input__x3A__nodes__x3A__prohibit">
        <xs:sequence>
            <xs:element maxOccurs="unbounded" ref="ptn:Input__x3A__node__x3A__prohibit"/>
        </xs:sequence>
    </xs:complexType>
    <xs:element name="Input__x3A__nodes__x3A__prohibit" type="ptn:Input__x3A__nodes__x3A__prohibit">
        <xs:annotation>
            <xs:documentation>Attract protect to destroy base inhibitory sequence barriers</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="Input__x3A__node__x3A__prohibit" type="ptn:Output_Node"/>
    <xs:complexType name="Simulation.Stress__x3A__calculate">
        <xs:sequence>
            <xs:element ref="ptn:Simulation.Stress__x3A__calculate__x3A__output_node" minOccurs="0"/>
            <xs:element minOccurs="0"
                ref="ptn:Simulation.Stress__x3A__calculate__x3A__output_node__x3A__not_validated"/>
        </xs:sequence>
        <xs:attribute ref="ptn:debug"/>
        <xs:attribute ref="ptn:Label"/>
        <xs:attribute ref="ptn:Label__x3A__context"/>
        <xs:attribute ref="ptn:Output_Node" use="prohibited"/>
        <xs:attribute ref="ptn:Output_Node__x3A__attract" use="required"/>
        <xs:attribute ref="ptn:Simulated_potential__x3A__more_charged_node"/>
        <xs:attribute ref="ptn:Simulated_potential__x3A__diff"/>
        <xs:attribute ref="ptn:Simulated_potential__x3A__less_charged_node"/>
        <xs:attribute ref="ptn:Distance"/>
    </xs:complexType>
    <xs:element name="Simulation.Stress__x3A__calculate"
        type="ptn:Simulation.Stress__x3A__calculate"/>
    <xs:complexType name="Simulation.Stress__x3A__calculate__x3A__output_node">
        <xs:complexContent>
            <xs:extension base="ptn:Node">
                <xs:attribute ref="ptn:Simulation.attract__x3A__calculate__x3A__output_node.type"
                    use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="Simulation.Stress__x3A__calculate__x3A__output_node"
        type="ptn:Simulation.Stress__x3A__calculate__x3A__output_node"/>
    <xs:complexType name="Simulation.model.xml">
        <xs:complexContent>
            <xs:restriction base="ptn:Simulation_body__x3A__abstract">
                <xs:sequence>
                    <xs:element minOccurs="1" ref="ptn:Simulation.attract__x3A__aggregate">
                        <xs:annotation>
                            <xs:documentation>generated in model - just for debug - passed as tunnel parameter</xs:documentation>
                        </xs:annotation>
                    </xs:element>
                    <xs:element ref="ptn:Receptors"/>
                    <xs:element ref="ptn:Nodes"/>
                </xs:sequence>
            </xs:restriction>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="Simulation.model.xml" type="ptn:Simulation.model.xml"/>
    <xs:complexType name="Simulation.attract__x3A__calculate__x3A__validated">
        <xs:complexContent>
            <xs:restriction base="ptn:Simulation.attract__x3A__calculate">
                <xs:sequence>
                    <xs:element maxOccurs="0"
                        ref="ptn:Simulation.attract__x3A__calculate__x3A__output_node" minOccurs="0"/>
                    <xs:element maxOccurs="3" minOccurs="0"
                        ref="ptn:Simulation.attract__x3A__calculate__x3A__output_node__x3A__validated"
                    />
                </xs:sequence>
            </xs:restriction>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="Simulation.attract__x3A__calculate__x3A__validated"
        type="ptn:Simulation.attract__x3A__calculate__x3A__validated"/>
    <xs:complexType name="Simulation.Stress__x3A__calculate__x3A__validated">
        <xs:complexContent>
            <xs:restriction base="ptn:Simulation.Stress__x3A__calculate">
                <xs:sequence>
                    <xs:element ref="ptn:Simulation.Stress__x3A__calculate__x3A__output_node"
                        minOccurs="0"/>
                    <xs:element minOccurs="0"
                        ref="ptn:Simulation.Stress__x3A__calculate__x3A__output_node__x3A__not_validated"
                    />
                </xs:sequence>
            </xs:restriction>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="Simulation.Stress__x3A__calculate__x3A__output_node__x3A__not_validated">
        <xs:attribute ref="ptn:debug"/>
    </xs:complexType>
    <xs:element name="Simulation.Stress__x3A__calculate__x3A__output_node__x3A__not_validated"
        type="ptn:Simulation.Stress__x3A__calculate__x3A__output_node__x3A__not_validated"/>
    <xs:complexType name="Simulation.attract__x3A__calculate__x3A__output_node__x3A__validated">
        <xs:complexContent>
            <xs:extension base="ptn:Node">
                <xs:attribute ref="ptn:Simulation.attract__x3A__calculate__x3A__output_node.type"
                    use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="Simulation.attract__x3A__calculate__x3A__output_node__x3A__validated"
        type="ptn:Simulation.attract__x3A__calculate__x3A__output_node__x3A__validated"/>
    <xs:element name="Simulation.Stress__x3A__calculate__x3A__validated"
        type="ptn:Simulation.Stress__x3A__calculate__x3A__validated"/>
    <xs:complexType name="Simulation.attract__x3A__aggregate__x3A__validated">
        <xs:sequence maxOccurs="unbounded">
            <xs:element maxOccurs="unbounded" minOccurs="0"
                ref="ptn:Simulation.attract__x3A__calculate__x3A__validated"/>
            <xs:element maxOccurs="unbounded" minOccurs="0"
                ref="ptn:Simulation.Stress__x3A__calculate__x3A__validated"/>
        </xs:sequence>
    </xs:complexType>
    <xs:element name="Simulation.attract__x3A__aggregate__x3A__validated"
        type="ptn:Simulation.attract__x3A__aggregate__x3A__validated"/>
    <xs:simpleType name="Output_Node__x3A__temp">
        <xs:annotation>
            <xs:documentation>Dla potrzeb nie uzwyania ID, na etapie draftow.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string"/>
    </xs:simpleType>
    <xs:simpleType name="Node__x3A__type">
        <xs:annotation>
            <xs:documentation>Dla potrzeb stats i doscislania</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string"/>
    </xs:simpleType>
    <xs:attribute name="Node__x3A__type" type="ptn:Node__x3A__type"/>
    <xs:attribute name="Input__x3A__node__x3A__stats" type="ptn:Output_Node__x3A__temp"/>
    <xs:attribute name="Output_Node__x3A__stats" type="ptn:Output_Node__x3A__temp"/>
    <xs:attribute name="Node__x3A__position" type="xs:string"/>
    <xs:complexType name="Simulation.model.apply.xml">
        <xs:complexContent>
            <xs:extension base="ptn:Simulation_body__x3A__abstract"/>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="Simulation.model.apply.xml" type="ptn:Simulation.model.apply.xml"/>
    <xs:attribute name="Output_Node__x3A__attract" type="ptn:Output_Node__x3A__temp"/>
    <xs:attribute name="Nodes" type="xs:string">
        <xs:annotation>
            <xs:documentation>W stats - flaguje czy jest node w Nodes</xs:documentation>
        </xs:annotation>
    </xs:attribute>
    <xs:attribute name="Coordinate_X" type="ptn:Coordinate"/>
    <xs:attribute name="Coordinate_Y" type="ptn:Coordinate"/>
    <xs:attribute name="Coordinate_Z" type="ptn:Coordinate"/>
</xs:schema>
